{"ast":null,"code":"var _jsxFileName = \"F:\\\\news aggregator\\\\News-API\\\\news-aggregator\\\\News-API\\\\frontend\\\\src\\\\components\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      message: \"\"\n    };\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n    this.handleRegister = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      if (password !== confirmPassword) {\n        this.setState({\n          message: \"Passwords do not match.\"\n        });\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:5000/signup\", {\n          email,\n          // Make sure this is correct\n          password\n        });\n        this.setState({\n          message: response.data.message\n        });\n        // Redirect to login page after successful registration\n        window.location.href = \"/Login\";\n      } catch (error) {\n        this.setState({\n          message: \"Registration failed: \" + error.response.data.message\n        });\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register to our News Aggregator Website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\" // Ensure this matches with the state and backend\n              ,\n              className: \"form-control\",\n              placeholder: \"Enter your email\",\n              value: this.state.email,\n              onChange: this.handleInputChange,\n              required: true // Add this to ensure field is not empty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              className: \"form-control\",\n              placeholder: \"Enter your password\",\n              value: this.state.password,\n              onChange: this.handleInputChange,\n              required: true // Add this to ensure field is not empty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              className: \"form-control\",\n              placeholder: \"Confirm your password\",\n              value: this.state.confirmPassword,\n              onChange: this.handleInputChange,\n              required: true // Add this to ensure field is not empty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"register-button\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Signup;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Signup","constructor","args","state","email","password","confirmPassword","message","handleInputChange","e","setState","target","id","value","handleRegister","preventDefault","response","post","data","window","location","href","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","required"],"sources":["F:/news aggregator/News-API/news-aggregator/News-API/frontend/src/components/Signup.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Signup.css\";\r\n\r\nexport class Signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    message: \"\"\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirmPassword } = this.state;\r\n\r\n    if (password !== confirmPassword) {\r\n      this.setState({ message: \"Passwords do not match.\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/signup\", {\r\n        email, // Make sure this is correct\r\n        password,\r\n      });\r\n      this.setState({ message: response.data.message });\r\n      // Redirect to login page after successful registration\r\n      window.location.href = \"/Login\";\r\n    } catch (error) {\r\n      this.setState({ message: \"Registration failed: \" + error.response.data.message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"signup-container\">\r\n        <div className=\"signup-box\">\r\n          <h2>Register to our News Aggregator Website</h2>\r\n          <form onSubmit={this.handleRegister}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\" // Ensure this matches with the state and backend\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your email\"\r\n                value={this.state.email}\r\n                onChange={this.handleInputChange}\r\n                required // Add this to ensure field is not empty\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your password\"\r\n                value={this.state.password}\r\n                onChange={this.handleInputChange}\r\n                required // Add this to ensure field is not empty\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Confirm your password\"\r\n                value={this.state.confirmPassword}\r\n                onChange={this.handleInputChange}\r\n                required // Add this to ensure field is not empty\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"register-button\">Register</button>\r\n          </form>\r\n          <p className=\"message\">{this.state.message}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
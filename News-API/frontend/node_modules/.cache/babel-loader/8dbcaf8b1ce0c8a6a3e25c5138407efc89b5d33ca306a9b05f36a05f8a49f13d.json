{"ast":null,"code":"var _jsxFileName = \"F:\\\\news aggregator\\\\News-API\\\\News-API\\\\frontend\\\\src\\\\components\\\\Interests.js\";\n// frontend/src/components/Interests.js\nimport React, { Component } from \"react\";\nimport News from \"./News\"; // Import News component to display news by interest\nimport axios from \"axios\";\nimport \"./Interests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Interests extends Component {\n  constructor(props) {\n    super(props);\n    // Fetch interests from the server\n    this.loadInterests = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/user/interests\", {\n          params: {\n            email: this.props.email\n          }\n        });\n        if (response.data.success) {\n          this.setState({\n            interests: response.data.interests\n          });\n          console.log(\"Interests loaded:\", response.data.interests); // Log fetched interests\n        }\n      } catch (error) {\n        console.error(\"Error loading interests:\", error);\n      }\n    };\n    // Handle category selection from the dropdown\n    this.handleCategoryChange = e => {\n      this.setState({\n        selectedCategory: e.target.value\n      });\n    };\n    // Add the selected category to the user's interests\n    this.addInterest = async () => {\n      const {\n        selectedCategory,\n        interests\n      } = this.state;\n      if (selectedCategory && !interests.includes(selectedCategory)) {\n        const updatedInterests = [...interests, selectedCategory];\n        this.setState({\n          interests: updatedInterests,\n          selectedCategory: \"\"\n        });\n        try {\n          await axios.post(\"http://localhost:5000/user/interests\", {\n            email: this.props.email,\n            interests: updatedInterests\n          });\n          console.log(\"Interest added:\", selectedCategory); // Log added interest\n        } catch (error) {\n          console.error(\"Error saving interests:\", error);\n        }\n      }\n    };\n    // Remove an interest from the user's list\n    this.removeInterest = async interestToRemove => {\n      const updatedInterests = this.state.interests.filter(interest => interest !== interestToRemove);\n      this.setState({\n        interests: updatedInterests\n      });\n      try {\n        await axios.post(\"http://localhost:5000/user/remove-interest\", {\n          email: this.props.email,\n          interest: interestToRemove\n        });\n        console.log(\"Interest removed:\", interestToRemove); // Log removed interest\n      } catch (error) {\n        console.error(\"Error removing interest:\", error);\n      }\n    };\n    // Show news based on the selected category\n    this.viewNews = () => {\n      if (this.state.selectedCategory) {\n        console.log(\"Selected Category for News:\", this.state.selectedCategory); // Log selected category\n        this.setState({\n          showNews: true\n        });\n      }\n    };\n    this.state = {\n      selectedCategory: \"\",\n      // User-selected category for news\n      categories: [\"business\", \"entertainment\", \"health\", \"science\", \"sports\", \"technology\"],\n      // Predefined categories\n      interests: [],\n      // User's interests (categories they are interested in)\n      showNews: false // Whether to show the news based on selected interest\n    };\n  }\n\n  // Fetch user's interests from the backend when the component mounts\n  componentDidMount() {\n    this.loadInterests();\n  }\n  render() {\n    const {\n      selectedCategory,\n      categories,\n      interests,\n      showNews\n    } = this.state;\n    const {\n      api_key\n    } = this.props; // API key passed from the parent component\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interests-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your News Interests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Select your news category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"categories\",\n          value: selectedCategory,\n          onChange: this.handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a category --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category.charAt(0).toUpperCase() + category.slice(1)\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addInterest,\n          className: \"add-button\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interests-list\",\n        children: interests.map((interest, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interest-box\",\n          children: [interest.charAt(0).toUpperCase() + interest.slice(1), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removeInterest(interest),\n            className: \"remove-button\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), interests.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.viewNews,\n        className: \"view-news-button\",\n        children: \"View News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), showNews && selectedCategory && /*#__PURE__*/_jsxDEV(News, {\n        category: selectedCategory,\n        api_key: api_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Interests;","map":{"version":3,"names":["React","Component","News","axios","jsxDEV","_jsxDEV","Interests","constructor","props","loadInterests","response","get","params","email","data","success","setState","interests","console","log","error","handleCategoryChange","e","selectedCategory","target","value","addInterest","state","includes","updatedInterests","post","removeInterest","interestToRemove","filter","interest","viewNews","showNews","categories","componentDidMount","render","api_key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","category","charAt","toUpperCase","slice","onClick","index","length"],"sources":["F:/news aggregator/News-API/News-API/frontend/src/components/Interests.js"],"sourcesContent":["// frontend/src/components/Interests.js\r\nimport React, { Component } from \"react\";\r\nimport News from \"./News\"; // Import News component to display news by interest\r\nimport axios from \"axios\";\r\nimport \"./Interests.css\";\r\n\r\nexport class Interests extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedCategory: \"\", // User-selected category for news\r\n      categories: [\"business\", \"entertainment\", \"health\", \"science\", \"sports\", \"technology\"], // Predefined categories\r\n      interests: [], // User's interests (categories they are interested in)\r\n      showNews: false, // Whether to show the news based on selected interest\r\n    };\r\n  }\r\n\r\n  // Fetch user's interests from the backend when the component mounts\r\n  componentDidMount() {\r\n    this.loadInterests();\r\n  }\r\n\r\n  // Fetch interests from the server\r\n  loadInterests = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/user/interests\", {\r\n        params: { email: this.props.email },\r\n      });\r\n      if (response.data.success) {\r\n        this.setState({ interests: response.data.interests });\r\n        console.log(\"Interests loaded:\", response.data.interests); // Log fetched interests\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading interests:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle category selection from the dropdown\r\n  handleCategoryChange = (e) => {\r\n    this.setState({ selectedCategory: e.target.value });\r\n  };\r\n\r\n  // Add the selected category to the user's interests\r\n  addInterest = async () => {\r\n    const { selectedCategory, interests } = this.state;\r\n    if (selectedCategory && !interests.includes(selectedCategory)) {\r\n      const updatedInterests = [...interests, selectedCategory];\r\n      this.setState({ interests: updatedInterests, selectedCategory: \"\" });\r\n\r\n      try {\r\n        await axios.post(\"http://localhost:5000/user/interests\", {\r\n          email: this.props.email,\r\n          interests: updatedInterests,\r\n        });\r\n        console.log(\"Interest added:\", selectedCategory); // Log added interest\r\n      } catch (error) {\r\n        console.error(\"Error saving interests:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Remove an interest from the user's list\r\n  removeInterest = async (interestToRemove) => {\r\n    const updatedInterests = this.state.interests.filter(\r\n      (interest) => interest !== interestToRemove\r\n    );\r\n    this.setState({ interests: updatedInterests });\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/user/remove-interest\", {\r\n        email: this.props.email,\r\n        interest: interestToRemove,\r\n      });\r\n      console.log(\"Interest removed:\", interestToRemove); // Log removed interest\r\n    } catch (error) {\r\n      console.error(\"Error removing interest:\", error);\r\n    }\r\n  };\r\n\r\n  // Show news based on the selected category\r\n  viewNews = () => {\r\n    if (this.state.selectedCategory) {\r\n      console.log(\"Selected Category for News:\", this.state.selectedCategory); // Log selected category\r\n      this.setState({ showNews: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedCategory, categories, interests, showNews } = this.state;\r\n    const { api_key } = this.props; // API key passed from the parent component\r\n\r\n    return (\r\n      <div className=\"interests-container\">\r\n        <h2>Your News Interests</h2>\r\n        <div className=\"category-selection\">\r\n          <label htmlFor=\"categories\">Select your news category:</label>\r\n          <select\r\n            id=\"categories\"\r\n            value={selectedCategory}\r\n            onChange={this.handleCategoryChange}\r\n          >\r\n            <option value=\"\">-- Select a category --</option>\r\n            {categories.map((category) => (\r\n              <option key={category} value={category}>\r\n                {category.charAt(0).toUpperCase() + category.slice(1)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.addInterest} className=\"add-button\">Add</button>\r\n        </div>\r\n\r\n        <div className=\"interests-list\">\r\n          {interests.map((interest, index) => (\r\n            <div key={index} className=\"interest-box\">\r\n              {interest.charAt(0).toUpperCase() + interest.slice(1)}\r\n              <button onClick={() => this.removeInterest(interest)} className=\"remove-button\">\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {interests.length > 0 && (\r\n          <button onClick={this.viewNews} className=\"view-news-button\">\r\n            View News\r\n          </button>\r\n        )}\r\n\r\n        {/* Render News component if \"View News\" was clicked */}\r\n        {showNews && selectedCategory && (\r\n          <News category={selectedCategory} api_key={api_key} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}